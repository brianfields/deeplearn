name: MCQ Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'backend/src/modules/lesson_planning/bite_sized_topics/mcq_service.py'
      - 'backend/src/modules/lesson_planning/bite_sized_topics/prompts/mcq_evaluation.py'
      - 'backend/src/modules/lesson_planning/bite_sized_topics/prompts/refined_material_extraction.py'
      - 'backend/src/modules/lesson_planning/bite_sized_topics/prompts/single_mcq_creation.py'
      - 'backend/src/modules/lesson_planning/bite_sized_topics/orchestrator.py'
      - 'backend/scripts/create_mcqs.py'
      - 'backend/tests/test_mcq_*.py'
      - '.github/workflows/mcq-tests.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'backend/src/modules/lesson_planning/bite_sized_topics/mcq_service.py'
      - 'backend/src/modules/lesson_planning/bite_sized_topics/prompts/mcq_evaluation.py'
      - 'backend/src/modules/lesson_planning/bite_sized_topics/prompts/refined_material_extraction.py'
      - 'backend/src/modules/lesson_planning/bite_sized_topics/prompts/single_mcq_creation.py'
      - 'backend/src/modules/lesson_planning/bite_sized_topics/orchestrator.py'
      - 'backend/scripts/create_mcqs.py'
      - 'backend/tests/test_mcq_*.py'
      - '.github/workflows/mcq-tests.yml'

jobs:
  mcq-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      working-directory: ./backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Set up environment variables
      run: |
        echo "OPENAI_API_KEY=test_key" >> $GITHUB_ENV
        echo "PYTHONPATH=${{ github.workspace }}/backend/src" >> $GITHUB_ENV
        echo "ENVIRONMENT=test" >> $GITHUB_ENV

    - name: Run MCQ Prompt Tests
      working-directory: ./backend
      run: |
        echo "🧪 Running MCQ Prompt Tests..."
        python -m pytest tests/test_mcq_prompts.py -v --tb=short

    - name: Run MCQ Service Tests
      working-directory: ./backend
      run: |
        echo "🧪 Running MCQ Service Tests..."
        python -m pytest tests/test_mcq_service.py -v --tb=short

    - name: Run MCQ Script Tests
      working-directory: ./backend
      run: |
        echo "🧪 Running MCQ Script Tests..."
        python -m pytest tests/test_mcq_script.py -v --tb=short

    - name: Run MCQ Orchestrator Tests
      working-directory: ./backend
      run: |
        echo "🧪 Running MCQ Orchestrator Tests..."
        python -m pytest tests/test_orchestrator_mcq.py -v --tb=short

    - name: Run all MCQ tests together
      working-directory: ./backend
      run: |
        echo "🧪 Running all MCQ tests together..."
        python -m pytest tests/test_mcq_prompts.py tests/test_mcq_script.py tests/test_mcq_service.py tests/test_orchestrator_mcq.py -v --tb=short --junit-xml=mcq-test-results.xml

    - name: Upload MCQ test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: mcq-test-results-${{ matrix.python-version }}
        path: |
          backend/mcq-test-results.xml
        retention-days: 30

    - name: MCQ Test Summary
      if: always()
      run: |
        echo "## 🧪 MCQ Test Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Test Results" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ MCQ Prompts: Completed" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ MCQ Service: Completed" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ MCQ Script: Completed" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ MCQ Orchestrator: Completed" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Components Tested" >> $GITHUB_STEP_SUMMARY
        echo "- 📝 **MCQ Prompts**: Refined material extraction, single MCQ creation, MCQ evaluation" >> $GITHUB_STEP_SUMMARY
        echo "- 🔧 **MCQ Service**: Two-pass MCQ creation system" >> $GITHUB_STEP_SUMMARY
        echo "- 🖥️ **MCQ Script**: Command-line interface for MCQ creation" >> $GITHUB_STEP_SUMMARY
        echo "- 🎯 **MCQ Orchestrator**: Integration with existing topic orchestrator" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "All MCQ functionality is working correctly! 🎉" >> $GITHUB_STEP_SUMMARY